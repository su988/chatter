[{"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/index.js":"1","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/App.js":"2","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Login.js":"3","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Register.js":"4","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserProfile.js":"5","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProtectedRoute.js":"6","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/AuthContext.js":"7","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/services/firebase.js":"8","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Sidebar.js":"9","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ChannelList.js":"10","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Channel.js":"11","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/NewChannelForm.js":"12","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannel.js":"13","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProfileIcon.js":"14","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MessageList.js":"15","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Messages.js":"16","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MainPanel.js":"17","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Welcome.js":"18","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/pages/Dashboard.js":"19","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/pages/ChannelDashboard.js":"20","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/ChannelContext.js":"21","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannelInfo.js":"22","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MembersList.js":"23","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/InputField.js":"24","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Modal.js":"25","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/AllChannels.js":"26","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SidebarHeader.js":"27","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/MessageContext.js":"28","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/UserContext.js":"29"},{"size":692,"mtime":1612212736288,"results":"30","hashOfConfig":"31"},{"size":867,"mtime":1612303457904,"results":"32","hashOfConfig":"31"},{"size":1687,"mtime":1612300928376,"results":"33","hashOfConfig":"31"},{"size":2021,"mtime":1612301725057,"results":"34","hashOfConfig":"31"},{"size":156,"mtime":1611624389820,"results":"35","hashOfConfig":"31"},{"size":466,"mtime":1611591567509,"results":"36","hashOfConfig":"31"},{"size":1423,"mtime":1611943595386,"results":"37","hashOfConfig":"31"},{"size":778,"mtime":1611704681473,"results":"38","hashOfConfig":"31"},{"size":154,"mtime":1612032024841,"results":"39","hashOfConfig":"31"},{"size":853,"mtime":1612196283573,"results":"40","hashOfConfig":"31"},{"size":467,"mtime":1612204049259,"results":"41","hashOfConfig":"31"},{"size":1162,"mtime":1612215874849,"results":"42","hashOfConfig":"31"},{"size":1489,"mtime":1612216753987,"results":"43","hashOfConfig":"31"},{"size":404,"mtime":1612040760083,"results":"44","hashOfConfig":"31"},{"size":1593,"mtime":1612284027734,"results":"45","hashOfConfig":"31"},{"size":890,"mtime":1612285127700,"results":"46","hashOfConfig":"31"},{"size":160,"mtime":1612031930937,"results":"47","hashOfConfig":"31"},{"size":503,"mtime":1612305321194,"results":"48","hashOfConfig":"31"},{"size":291,"mtime":1612195742742,"results":"49","hashOfConfig":"31"},{"size":247,"mtime":1612038524614,"results":"50","hashOfConfig":"31"},{"size":2593,"mtime":1612303430987,"results":"51","hashOfConfig":"31"},{"size":286,"mtime":1612204721789,"results":"52","hashOfConfig":"31"},{"size":866,"mtime":1612205989609,"results":"53","hashOfConfig":"31"},{"size":314,"mtime":1612194920124,"results":"54","hashOfConfig":"31"},{"size":1170,"mtime":1612145782017,"results":"55","hashOfConfig":"31"},{"size":701,"mtime":1612203754493,"results":"56","hashOfConfig":"31"},{"size":204,"mtime":1612203836900,"results":"57","hashOfConfig":"31"},{"size":1178,"mtime":1612213513921,"results":"58","hashOfConfig":"31"},{"size":765,"mtime":1612213410867,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1teaxqu",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/index.js",[],["127","128"],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/App.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Login.js",["129"],"import React, { useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { signInWithGoogle } from '../services/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport './Login.css';\n\nexport default function Login() {\n  const { login, currentUser } = useAuth();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch {\n      setError('Email and password do not match');\n    }\n\n    setLoading(false);\n  };\n\n  currentUser && history.push('/');\n\n  return (\n    <div className='login'>\n      <h2>Login</h2>\n      {error && <div>{error}</div>}\n      <form onSubmit={handleSubmit} className='login_form'>\n        <input\n          type='text'\n          ref={emailRef}\n          className='login_email'\n          placeholder='Email'\n        />\n        <input\n          type='password'\n          ref={passwordRef}\n          className='login_password'\n          placeholder='Password'\n        />\n        <input className='login_submit' type='submit' value='Submit' />\n      </form>\n\n      <div className='login_google_text'>Or sign in with Google</div>\n\n      <button onClick={signInWithGoogle} className='login_google_btn'>\n        Google\n      </button>\n\n      <div className='login_register'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </div>\n    </div>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Register.js",["130"],"import React, { useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { signInWithGoogle } from '../services/firebase';\nimport './Login.css';\n\nexport default function Register() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup, currentUser } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  };\n\n  currentUser && history.push('/');\n\n  return (\n    <div className='login'>\n      <h2>signup</h2>\n      {error && <div>{error}</div>}\n      <form onSubmit={handleSubmit} className='login_form'>\n        <input\n          type='text'\n          ref={emailRef}\n          className='login_email'\n          placeholder='Email'\n        />\n        <input\n          type='password'\n          ref={passwordRef}\n          className='login_password'\n          placeholder='Password'\n        />\n        <input\n          type='password'\n          ref={passwordConfirmRef}\n          className='login_password'\n          placeholder='Confirm Password'\n        />\n        <input type='submit' value='Submit' className='login_submit' />\n      </form>\n\n      <div className='login_google_text'>Or sign in with Google</div>\n\n      <button onClick={signInWithGoogle} className='login_google_btn'>\n        Google\n      </button>\n\n      <div className='login_register'>\n        Already have an account? <Link to='/login'>Log In</Link>\n      </div>\n    </div>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserProfile.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProtectedRoute.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/AuthContext.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/services/firebase.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Sidebar.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ChannelList.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Channel.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/NewChannelForm.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannel.js",["131","132"],"import React, { Fragment, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useChannel } from '../contexts/ChannelContext';\nimport Sidebar from './Sidebar';\nimport SidebarHeader from './SidebarHeader';\nimport SelectedChannelInfo from './SelectedChannelInfo';\nimport MembersList from './MembersList';\nimport ProfileIcon from './ProfileIcon';\nimport MessageList from './MessageList';\nimport './SelectedChannel.css';\nimport { IoIosArrowBack } from 'react-icons/io';\n\nexport default function SelectedChannel() {\n  const { channelId } = useParams();\n  const { currentUser } = useAuth();\n  const {\n    getChannelInfo,\n    addUserToChannel,\n    channelName,\n    channelDescription\n  } = useChannel();\n\n  useEffect(() => {\n    getChannelInfo(channelId);\n  }, []);\n\n  useEffect(() => {\n    addUserToChannel(currentUser.uid, channelId);\n  }, []);\n\n  return (\n    <>\n      <Sidebar>\n        <SidebarHeader className='extra'>\n          <IoIosArrowBack />\n          <Link className='all_channels' to='/'>\n            All channels\n          </Link>\n        </SidebarHeader>\n\n        <SelectedChannelInfo\n          name={channelName}\n          description={channelDescription}\n        />\n        <MembersList channelId={channelId} />\n        <ProfileIcon />\n      </Sidebar>\n      <MessageList\n        channelName={channelName}\n        channelId={channelId}\n        currentUser={currentUser}\n      />\n    </>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProfileIcon.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MessageList.js",["133","134"],"import React, { useEffect, useRef } from 'react';\nimport MainPanel from './MainPanel';\nimport Messages from './Messages';\nimport { useMessage } from '../contexts/MessageContext';\nimport { useUser } from '../contexts/UserContext';\nimport { IoMdSend } from 'react-icons/io';\nimport './MessageList.css';\n\nexport default function MessageList({ channelId, currentUser, channelName }) {\n  const textRef = useRef();\n  const { getCurrentUserInfo, username, photoUrl } = useUser();\n  const { createNewMessage, getMessagesInChannel, messages } = useMessage();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (textRef.current.value === '') {\n      return;\n    }\n    createNewMessage(\n      channelId,\n      currentUser.uid,\n      textRef.current.value,\n      username,\n      photoUrl,\n      Date.now()\n    );\n\n    textRef.current.value = '';\n  };\n\n  useEffect(() => {\n    getCurrentUserInfo(currentUser.uid);\n  }, []);\n\n  useEffect(() => {\n    //get all messages from selected channel\n    getMessagesInChannel(channelId);\n  }, []);\n\n  return (\n    <MainPanel>\n      <div className='message_panel'>\n        <div className='message_panel_header'>{channelName}</div>\n        <Messages messages={messages} />\n        <form className='message_input' onSubmit={handleSubmit}>\n          <input\n            className='message_input_text'\n            placeholder='Enter Message here'\n            type='text'\n            ref={textRef}\n          />\n\n          <button className='message_submit_btn'>\n            <IoMdSend />\n          </button>\n        </form>\n      </div>\n    </MainPanel>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Messages.js",[],["135","136"],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MainPanel.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Welcome.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/pages/Dashboard.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/pages/ChannelDashboard.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/ChannelContext.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannelInfo.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MembersList.js",["137"],"import React, { Fragment, useEffect } from 'react';\nimport { useChannel } from '../contexts/ChannelContext';\nimport { Initial } from 'react-initial';\nimport './MembersList.css';\n\nexport default function MembersList({ channelId }) {\n  const { getChannelMembers, channelMembers } = useChannel();\n\n  useEffect(() => {\n    getChannelMembers(channelId);\n  }, []);\n\n  const renderList =\n    channelMembers &&\n    channelMembers.map((user, index) => (\n      <div className='member_info' key={index}>\n        <Initial\n          name={`${user}`}\n          height={42}\n          width={42}\n          fontSize={16}\n          color={'#252329'}\n        />\n        <div className='member_name'>{user}</div>\n      </div>\n    ));\n\n  return (\n    <>\n      <h4 className='members_header'>Members</h4>\n      <div className='member_list'>{renderList && renderList}</div>\n    </>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/InputField.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Modal.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/AllChannels.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SidebarHeader.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/MessageContext.js",["138"],"import React, { useContext, useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\n\nconst MessageContext = React.createContext();\n\nexport function useMessage() {\n  return useContext(MessageContext);\n}\n\nexport function MessageProvider({ children }) {\n  const [messages, setMessages] = useState();\n\n  const createNewMessage = (\n    channelId,\n    userID,\n    text,\n    username,\n    photoUrl,\n    timestamp\n  ) => {\n    const messageRef = db.ref('Messages/' + channelId);\n    const message = {\n      userId: userID,\n      text: text,\n      username: username,\n      photoUrl: photoUrl,\n      created: timestamp\n    };\n    messageRef.push(message);\n  };\n\n  const getMessagesInChannel = (channelId) => {\n    const messageRef = db.ref('Messages/' + channelId);\n    messageRef.on('value', (snapshot) => {\n      let tempList = [];\n      const messages = snapshot.val();\n      for (let id in messages) {\n        tempList.push(messages[id]);\n      }\n\n      setMessages(tempList);\n    });\n  };\n\n  const value = { createNewMessage, getMessagesInChannel, messages };\n\n  return (\n    <MessageContext.Provider value={value}>{children}</MessageContext.Provider>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/UserContext.js",["139"],"import React, { useContext, useState, useEffect } from 'react';\nimport { db } from '../services/firebase';\n\nconst UserContext = React.createContext();\n\nexport function useUser() {\n  return useContext(UserContext);\n}\n\nexport function UserProvider({ children }) {\n  const [username, setUsername] = useState();\n  const [photoUrl, setPhotoUrl] = useState();\n\n  const getCurrentUserInfo = (userId) => {\n    const userRef = db.ref('Users/' + userId);\n    userRef.on('value', (snapshot) => {\n      const user = snapshot.val();\n      setUsername(user['username']);\n      setPhotoUrl(user['photoUrl']);\n    });\n  };\n\n  const value = {\n    getCurrentUserInfo,\n    username,\n    photoUrl\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n}\n",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":12,"column":10,"nodeType":"146","messageId":"147","endLine":12,"endColumn":17},{"ruleId":"144","severity":1,"message":"145","line":13,"column":10,"nodeType":"146","messageId":"147","endLine":13,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":26,"column":6,"nodeType":"150","endLine":26,"endColumn":8,"suggestions":"151"},{"ruleId":"148","severity":1,"message":"152","line":30,"column":6,"nodeType":"150","endLine":30,"endColumn":8,"suggestions":"153"},{"ruleId":"148","severity":1,"message":"154","line":34,"column":6,"nodeType":"150","endLine":34,"endColumn":8,"suggestions":"155"},{"ruleId":"148","severity":1,"message":"156","line":39,"column":6,"nodeType":"150","endLine":39,"endColumn":8,"suggestions":"157"},{"ruleId":"140","replacedBy":"158"},{"ruleId":"142","replacedBy":"159"},{"ruleId":"148","severity":1,"message":"160","line":11,"column":6,"nodeType":"150","endLine":11,"endColumn":8,"suggestions":"161"},{"ruleId":"144","severity":1,"message":"162","line":1,"column":39,"nodeType":"146","messageId":"147","endLine":1,"endColumn":48},{"ruleId":"144","severity":1,"message":"162","line":1,"column":39,"nodeType":"146","messageId":"147","endLine":1,"endColumn":48},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'channelId' and 'getChannelInfo'. Either include them or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has missing dependencies: 'addUserToChannel', 'channelId', and 'currentUser.uid'. Either include them or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'currentUser.uid' and 'getCurrentUserInfo'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has missing dependencies: 'channelId' and 'getMessagesInChannel'. Either include them or remove the dependency array.",["168"],["163"],["164"],"React Hook useEffect has missing dependencies: 'channelId' and 'getChannelMembers'. Either include them or remove the dependency array.",["169"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [channelId, getChannelInfo]",{"range":"180","text":"181"},"Update the dependencies array to be: [addUserToChannel, channelId, currentUser.uid]",{"range":"182","text":"183"},"Update the dependencies array to be: [currentUser.uid, getCurrentUserInfo]",{"range":"184","text":"185"},"Update the dependencies array to be: [channelId, getMessagesInChannel]",{"range":"186","text":"187"},"Update the dependencies array to be: [channelId, getChannelMembers]",{"range":"188","text":"189"},[839,841],"[channelId, getChannelInfo]",[920,922],"[addUserToChannel, channelId, currentUser.uid]",[920,922],"[currentUser.uid, getCurrentUserInfo]",[1033,1035],"[channelId, getMessagesInChannel]",[354,356],"[channelId, getChannelMembers]"]