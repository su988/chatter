[{"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/index.js":"1","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/App.js":"2","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Login.js":"3","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Register.js":"4","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserProfile.js":"5","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProtectedRoute.js":"6","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/AuthContext.js":"7","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/services/firebase.js":"8","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Dashboard.js":"9","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Sidebar.js":"10","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ChannelList.js":"11","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Channel.js":"12","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/NewChannelForm.js":"13","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannel.js":"14","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProfileIcon.js":"15","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserList.js":"16","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MessageList.js":"17","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Messages.js":"18","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MainPanel.js":"19","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Welcome.js":"20"},{"size":334,"mtime":1611418435162,"results":"21","hashOfConfig":"22"},{"size":906,"mtime":1611940001310,"results":"23","hashOfConfig":"22"},{"size":1384,"mtime":1611950682322,"results":"24","hashOfConfig":"22"},{"size":1690,"mtime":1611950756794,"results":"25","hashOfConfig":"22"},{"size":156,"mtime":1611624389820,"results":"26","hashOfConfig":"22"},{"size":466,"mtime":1611591567509,"results":"27","hashOfConfig":"22"},{"size":1423,"mtime":1611943595386,"results":"28","hashOfConfig":"22"},{"size":778,"mtime":1611704681473,"results":"29","hashOfConfig":"22"},{"size":227,"mtime":1611963720185,"results":"30","hashOfConfig":"22"},{"size":186,"mtime":1611802701888,"results":"31","hashOfConfig":"22"},{"size":1492,"mtime":1611879031974,"results":"32","hashOfConfig":"22"},{"size":246,"mtime":1611849811575,"results":"33","hashOfConfig":"22"},{"size":940,"mtime":1611797866504,"results":"34","hashOfConfig":"22"},{"size":1416,"mtime":1611885311014,"results":"35","hashOfConfig":"22"},{"size":393,"mtime":1611880510538,"results":"36","hashOfConfig":"22"},{"size":738,"mtime":1611956235013,"results":"37","hashOfConfig":"22"},{"size":1549,"mtime":1611961901495,"results":"38","hashOfConfig":"22"},{"size":435,"mtime":1611959639811,"results":"39","hashOfConfig":"22"},{"size":134,"mtime":1611961920116,"results":"40","hashOfConfig":"22"},{"size":199,"mtime":1611963836511,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1teaxqu",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/index.js",[],["87","88"],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/App.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Login.js",["89"],"import React, { Fragment, useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { signInWithGoogle } from '../services/firebase';\nimport { Link, useHistory } from 'react-router-dom';\n\nexport default function Login() {\n  const { login, currentUser } = useAuth();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError('');\n      setLoading(true);\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch {\n      setError('Failed to login');\n    }\n\n    setLoading(false);\n  };\n\n  currentUser && history.push('/');\n\n  return (\n    <>\n      <h2>Login</h2>\n      {error && <div>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email\n          <input type='text' ref={emailRef} />\n        </label>\n        <label>\n          Password\n          <input type='password' ref={passwordRef} />\n        </label>\n        <input type='submit' value='Submit' />\n      </form>\n      <div>\n        <button onClick={signInWithGoogle}>Google</button>\n      </div>\n      <div>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </div>\n    </>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Register.js",["90"],"import React, { Fragment, useState, useRef } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Link, useHistory } from 'react-router-dom';\nimport { signInWithGoogle } from '../services/firebase';\n\nexport default function Register() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup, currentUser } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push('/');\n    } catch {\n      setError('Failed to create an account');\n    }\n\n    setLoading(false);\n  };\n\n  currentUser && history.push('/');\n\n  return (\n    <>\n      <h2>signup</h2>\n      {error && <div>{error}</div>}\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email\n          <input type='text' ref={emailRef} />\n        </label>\n        <label>\n          Password\n          <input type='password' ref={passwordRef} />\n        </label>\n        <label>\n          Confirm Password\n          <input type='password' ref={passwordConfirmRef} />\n        </label>\n        <input type='submit' value='Submit' />\n      </form>\n      <div>\n        <button onClick={signInWithGoogle}>Google</button>\n      </div>\n      <div>\n        Already have an account? <Link to='/login'>Log In</Link>\n      </div>\n    </>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserProfile.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProtectedRoute.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/contexts/AuthContext.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/services/firebase.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Dashboard.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Sidebar.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ChannelList.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Channel.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/NewChannelForm.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/SelectedChannel.js",["91","92"],"import React, { Fragment, useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { db } from '../services/firebase';\nimport { useAuth } from '../contexts/AuthContext';\nimport Sidebar from './Sidebar';\nimport UserList from './UserList';\nimport ProfileIcon from './ProfileIcon';\nimport MessageList from './MessageList';\n\nexport default function SelectedChannel() {\n  const [name, setName] = useState();\n  const [description, setDescription] = useState();\n  const { channelId } = useParams();\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    const channelRef = db.ref('Channels').child(channelId);\n    channelRef.on('value', (snapshot) => {\n      setName(snapshot.val().name);\n      setDescription(snapshot.val().description);\n    });\n  }, []);\n\n  useEffect(() => {\n    // every time user clicks a channel, it gets added to users channel key {channelId : true}\n    const channelRef = db.ref('Users').child(currentUser.uid).child('channels');\n    channelRef.update({ [channelId]: true });\n  }, []);\n\n  return (\n    <>\n      <Sidebar>\n        <Link to='/'>\n          <div> Back to all channels</div>\n        </Link>\n        <h3>{name}</h3>\n        <p>{description}</p>\n        <h4>Members List</h4>\n        <UserList channelId={channelId} />\n        <ProfileIcon />\n      </Sidebar>\n      <MessageList channelId={channelId} currentUser={currentUser} />\n    </>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/ProfileIcon.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/UserList.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MessageList.js",["93","94"],"import React, { useState, useEffect, useRef } from 'react';\nimport { db } from '../services/firebase';\nimport MainPanel from './MainPanel';\nimport Messages from './Messages';\n\nexport default function MessageList({ channelId, currentUser }) {\n  const [messages, setMessages] = useState();\n  const [username, setUsername] = useState();\n  const [photoUrl, setPhotoUrl] = useState();\n  const textRef = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const messageRef = db.ref('Messages/' + channelId);\n    const message = {\n      userId: currentUser.uid,\n      text: textRef.current.value,\n      username: username,\n      photoUrl: photoUrl,\n      created: Date.now()\n    };\n    messageRef.push(message);\n    textRef.current.value = '';\n  };\n\n  useEffect(() => {\n    const userRef = db.ref('Users/' + currentUser.uid);\n    userRef.on('value', (snapshot) => {\n      const user = snapshot.val();\n      setUsername(user['username']);\n      setPhotoUrl(user['photoUrl']);\n    });\n  }, []);\n\n  useEffect(() => {\n    const messageRef = db.ref('Messages/' + channelId);\n    messageRef.on('value', (snapshot) => {\n      let tempList = [];\n      const messages = snapshot.val();\n      for (let id in messages) {\n        tempList.push(messages[id]);\n      }\n\n      setMessages(tempList);\n    });\n  }, []);\n\n  return (\n    <MainPanel>\n      <Messages messages={messages} />\n      <form onSubmit={handleSubmit}>\n        <input type='text' ref={textRef} />\n        <input type='submit' value='Submit' />\n      </form>\n    </MainPanel>\n  );\n}\n","/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Messages.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/MainPanel.js",[],"/Users/suyash/Desktop/main/#100DaysCode/chat_app/src/components/Welcome.js",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":11,"column":10,"nodeType":"102","messageId":"103","endLine":11,"endColumn":17},{"ruleId":"100","severity":1,"message":"101","line":12,"column":10,"nodeType":"102","messageId":"103","endLine":12,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":22,"column":6,"nodeType":"106","endLine":22,"endColumn":8,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":28,"column":6,"nodeType":"106","endLine":28,"endColumn":8,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":34,"column":6,"nodeType":"106","endLine":34,"endColumn":8,"suggestions":"111"},{"ruleId":"104","severity":1,"message":"105","line":47,"column":6,"nodeType":"106","endLine":47,"endColumn":8,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"113","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'channelId'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has missing dependencies: 'channelId' and 'currentUser.uid'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'currentUser.uid'. Either include it or remove the dependency array.",["118"],["119"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"120","fix":"126"},"Update the dependencies array to be: [channelId]",{"range":"127","text":"128"},"Update the dependencies array to be: [channelId, currentUser.uid]",{"range":"129","text":"130"},"Update the dependencies array to be: [currentUser.uid]",{"range":"131","text":"132"},{"range":"133","text":"128"},[790,792],"[channelId]",[1043,1045],"[channelId, currentUser.uid]",[1001,1003],"[currentUser.uid]",[1311,1313]]